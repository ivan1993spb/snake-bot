openapi: 3.0.3

info:
  title: Snake-Bot API
  description: |
    Snake-Bot service controls a swarm of bots running on a
    preconfigured instance of Snake-Server.
  version: 1.0.0
  license:
    name: MIT
  contact:
    name: Ivan Pushkin
    url: https://github.com/ivan1993spb

servers:
  - url: /api
    description: Current instance.
  - url: http://localhost:8080/api
    description: HTTP instance at localhost 8080.
  - url: http://localhost:9090/api
    description: HTTP instance at localhost 9090.
  - url: https://localhost:8080/api
    description: HTTPS instance at localhost 8080.

paths:
  /bots:
    post:
      summary: Start bots.
      description: |
        The method starts the given numbers of bots in specified games.
      tags:
        - Bots
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Game'
          application/json:
            schema:
              $ref: '#/components/schemas/Games'
          text/yaml:
            schema:
              $ref: '#/components/schemas/Games'
      responses:
        201:
          description: The bots have been started.
          content:
            text/yaml:
              schema:
                $ref: '#/components/schemas/Games'
            application/json:
              schema:
                $ref: '#/components/schemas/Games'
        400:
          $ref: '#/components/responses/InvalidParameters'
        401:
          $ref: '#/components/responses/AuthorizationError'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
    get:
      summary: Get the numbers of bots.
      description: |
        Returns the numbers of bots for each game.
      tags:
        - Bots
      security:
        - bearerAuth: []
      responses:
        200:
          description: Current setup.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Games'
            text/yaml:
              schema:
                $ref: '#/components/schemas/Games'
        400:
          $ref: '#/components/responses/InvalidParameters'
        401:
          $ref: '#/components/responses/AuthorizationError'
        500:
          $ref: '#/components/responses/ServerError'

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    InvalidParameters:
      description: Invalid parameters.
      content:
        text/yaml:
          schema:
            $ref: '#/components/schemas/Error'
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServerError:
      description: Internal server error.
      content:
        text/yaml:
          schema:
            $ref: '#/components/schemas/Error'
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    AuthorizationError:
      description: Authorization error.
      content:
        text/yaml:
          schema:
            $ref: '#/components/schemas/Error'
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServiceUnavailable:
      description: Service is unavailable.
      content:
        text/yaml:
          schema:
            $ref: '#/components/schemas/Error'
        application/json:
          schema:
            $ref: '#/components/schemas/Error'


  schemas:
    
    Game:
      type: object
      description: |
        The object contains a game ID and a number of bots.
      required:
        - game
        - bots
      properties:
        game:
          description: Game ID
          type: integer
          format: int32
        bots:
          description: Number of bots
          type: integer
          format: int32

    Games:
      type: object
      description: The object contains a list of games and bots.
      required:
        - games
      properties:
        games:
          description: A list of game IDs and numbers of bots.
          type: array
          items:
            $ref: '#/components/schemas/Game'

    Error:
      type: object
      description: |
        The object contains an error code and short description.
      required:
        - code
        - text
      properties:
        code:
          description: Error code.
          type: integer
          format: int32
        text:
          description: Description.
          type: string
